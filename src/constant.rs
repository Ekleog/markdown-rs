//! Constants needed to parse markdown.
//!
//! Most of these constants are magic numbers, such as the number of markers
//! needed to parse [code (fenced)][code_fenced]
//! ([`CODE_FENCED_SEQUENCE_SIZE_MIN`][]) or the max number of allowed markers
//! in a [heading (atx)][heading_atx]
//! ([`HEADING_ATX_OPENING_FENCE_SIZE_MAX`][]).
//!
//! Some constants are instead lists of things, such as the list of tag names
//! considered in the **raw** production of [HTML (flow)][html_flow]
//! ([`HTML_RAW_NAMES`][]), or the list of allowed named character references
//! ([`CHARACTER_REFERENCE_NAMES`][]).
//!
//! [code_fenced]: crate::construct::code_fenced
//! [heading_atx]: crate::construct::heading_atx
//! [html_flow]: crate::construct::html_flow

/// The number of characters allowed in a protocol of an [autolink][].
///
/// The protocol part is the `xxx` in `<xxx://example.com>`.
/// 32 characters is fine, 33 is too many.
///
/// [autolink]: crate::construct::autolink
pub const AUTOLINK_SCHEME_SIZE_MAX: usize = 32;

/// The number of characters allowed in a domain of an email [autolink][].
///
/// There can be multiple ‚Äúdomains‚Äù.
/// A domain part is each `xxx` in `<example@xxx.xxx.xxx>`.
/// 63 characters is fine, 64 is too many.
///
/// [autolink]: crate::construct::autolink
pub const AUTOLINK_DOMAIN_SIZE_MAX: usize = 63;

/// The max number of characters in a decimal numeric
/// [character reference][character_reference].
///
/// To illustrate, this allows `&#9999999;` and disallows `&#99999990;`.
/// This limit is imposed because all bigger numbers are invalid.
///
/// [character_reference]: crate::construct::character_reference
pub const CHARACTER_REFERENCE_DECIMAL_SIZE_MAX: usize = 7;

/// The max number of characters in a hexadecimal numeric
/// [character reference][character_reference].
///
/// To illustrate, this allows `&#xff9999;` and disallows `&#xff99990;`.
/// This limit is imposed because all bigger numbers are invalid.
///
/// [character_reference]: crate::construct::character_reference
pub const CHARACTER_REFERENCE_HEXADECIMAL_SIZE_MAX: usize = 6;

/// The max number of characters in a named
/// [character reference][character_reference].
///
/// This is the number of the longest name in [`CHARACTER_REFERENCE_NAMES`][].
/// It allows `&CounterClockwiseContourIntegral;` and prevents the parser from
/// continuing for eons.
///
/// [character_reference]: crate::construct::character_reference
pub const CHARACTER_REFERENCE_NAMED_SIZE_MAX: usize = 31;

/// The number of markers needed for [code (fenced)][code_fenced] to form.
///
/// Like many things in markdown, the number is `3`.
///
/// [code_fenced]: crate::construct::code_fenced
pub const CODE_FENCED_SEQUENCE_SIZE_MIN: usize = 3;

/// The number of spaces needed, before a line ending, for a [hard break
/// (trailing)][hard_break_trailing] to form.
///
/// [hard_break_trailing]: crate::construct::hard_break_trailing
pub const HARD_BREAK_PREFIX_SIZE_MIN: usize = 2;

/// The max number of markers allowed to form a [heading (atx)][heading_atx].
///
/// This limitation is imposed by HTML, which imposes a max heading rank of
/// `6`.
///
/// [heading_atx]: crate::construct::heading_atx
pub const HEADING_ATX_OPENING_FENCE_SIZE_MAX: usize = 6;

/// List of HTML tag names that form the **basic** production of
/// [HTML (flow)][html_flow].
///
/// The **basic** production allows interleaving HTML and markdown with blank
/// lines and allows flow (block) elements to interrupt definitions, paragraphs,
/// and heading (setext).
/// Tag name matching must be performed insensitive to case, and thus this list
/// includes lowercase tag names.
///
/// Tag names not on this list result in the **complete** production.
///
/// > üëâ **Note**: `source` was removed on `main` of the `CommonMark` spec and
/// > is slated to be released in `CommonMark@0.31`.
///
/// ## References
///
/// *   [*¬ß 4.6 HTML blocks* in `CommonMark`](https://spec.commonmark.org/0.30/#html-blocks)
/// *   [*Remove source element as HTML block start condition* as `commonmark/commonmark-spec#710`](https://github.com/commonmark/commonmark-spec/pull/710)
///
/// [html_flow]: crate::construct::html_flow
pub const HTML_BLOCK_NAMES: [&str; 61] = [
    "address",
    "article",
    "aside",
    "base",
    "basefont",
    "blockquote",
    "body",
    "caption",
    "center",
    "col",
    "colgroup",
    "dd",
    "details",
    "dialog",
    "dir",
    "div",
    "dl",
    "dt",
    "fieldset",
    "figcaption",
    "figure",
    "footer",
    "form",
    "frame",
    "frameset",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "head",
    "header",
    "hr",
    "html",
    "iframe",
    "legend",
    "li",
    "link",
    "main",
    "menu",
    "menuitem",
    "nav",
    "noframes",
    "ol",
    "optgroup",
    "option",
    "p",
    "param",
    "section",
    "summary",
    "table",
    "tbody",
    "td",
    "tfoot",
    "th",
    "thead",
    "title",
    "tr",
    "track",
    "ul",
];

/// List of HTML tag names that form the **raw** production of
/// [HTML (flow)][html_flow].
///
/// The **raw** production allows blank lines and thus no interleaving with
/// markdown.
/// Tag name matching must be performed insensitive to case, and thus this list
/// includes lowercase tag names.
///
/// The number of the longest tag name is also stored as a constant in
/// [`HTML_RAW_SIZE_MAX`][].
///
/// > üëâ **Note**: `textarea` was added in `CommonMark@0.30`.
///
/// ## References
///
/// *   [*¬ß 4.6 HTML blocks* in `CommonMark`](https://spec.commonmark.org/0.30/#html-blocks)
///
/// [html_flow]: crate::construct::html_flow
pub const HTML_RAW_NAMES: [&str; 4] = ["pre", "script", "style", "textarea"];

/// The number of the longest tag name in [`HTML_RAW_NAMES`][].
///
/// This is currently the size of `textarea`.
pub const HTML_RAW_SIZE_MAX: usize = 8;

/// To safeguard performance, labels are capped at a large number: `999`.
pub const LINK_REFERENCE_SIZE_MAX: usize = 999;

/// List of protocols allowed, when operating safely, as `href` on `a`.
///
/// This list is based on what is allowed by GitHub.
pub const SAFE_PROTOCOL_HREF: [&str; 6] = ["http", "https", "irc", "ircs", "mailto", "xmpp"];

/// List of protocols allowed, when operating safely, as `src` on `img`.
///
/// This list is based on what is allowed by GitHub.
// To do: image.
#[allow(dead_code)]
pub const SAFE_PROTOCOL_SRC: [&str; 2] = ["http", "https"];

/// The number of characters that form a tab stop.
///
/// This relates to the number of whitespace characters needed to form certain
/// constructs in markdown, most notable the whitespace required to form
/// [code (indented)][code_indented].
///
/// > üëâ **Note**: each [`Code::VirtualSpace`][vs] and `Code::Char('\t' | ' ')`
/// > counts.
///
/// [code_indented]: crate::construct::code_indented
/// [vs]: crate::tokenizer::Code::VirtualSpace
pub const TAB_SIZE: usize = 4;

/// The number of markers needed for a [thematic break][thematic_break] to form.
///
/// Like many things in markdown, the number is `3`.
///
/// [thematic_break]: crate::construct::thematic_break
pub const THEMATIC_BREAK_MARKER_COUNT_MIN: usize = 3;

// Important: please touch the below lists as few times as possible to keep Git small.

/// List of names that can form a named
/// [character reference][character_reference].
///
/// This list is sensitive to casing.
///
/// The number of the longest name (`CounterClockwiseContourIntegral`) is also
/// stored as a constant in [`CHARACTER_REFERENCE_NAMED_SIZE_MAX`][].
///
/// The corresponding values of this list are stored in
/// [`CHARACTER_REFERENCE_VALUES`][].
/// They correspond through their index.
///
/// ## References
///
/// *   [*¬ß 2.5 Entity and numeric character references* in `CommonMark`](https://spec.commonmark.org/0.30/#entity-and-numeric-character-references)
///
/// [character_reference]: crate::construct::character_reference
pub const CHARACTER_REFERENCE_NAMES: [&str; 2125] = [
    "AElig",
    "AMP",
    "Aacute",
    "Abreve",
    "Acirc",
    "Acy",
    "Afr",
    "Agrave",
    "Alpha",
    "Amacr",
    "And",
    "Aogon",
    "Aopf",
    "ApplyFunction",
    "Aring",
    "Ascr",
    "Assign",
    "Atilde",
    "Auml",
    "Backslash",
    "Barv",
    "Barwed",
    "Bcy",
    "Because",
    "Bernoullis",
    "Beta",
    "Bfr",
    "Bopf",
    "Breve",
    "Bscr",
    "Bumpeq",
    "CHcy",
    "COPY",
    "Cacute",
    "Cap",
    "CapitalDifferentialD",
    "Cayleys",
    "Ccaron",
    "Ccedil",
    "Ccirc",
    "Cconint",
    "Cdot",
    "Cedilla",
    "CenterDot",
    "Cfr",
    "Chi",
    "CircleDot",
    "CircleMinus",
    "CirclePlus",
    "CircleTimes",
    "ClockwiseContourIntegral",
    "CloseCurlyDoubleQuote",
    "CloseCurlyQuote",
    "Colon",
    "Colone",
    "Congruent",
    "Conint",
    "ContourIntegral",
    "Copf",
    "Coproduct",
    "CounterClockwiseContourIntegral",
    "Cross",
    "Cscr",
    "Cup",
    "CupCap",
    "DD",
    "DDotrahd",
    "DJcy",
    "DScy",
    "DZcy",
    "Dagger",
    "Darr",
    "Dashv",
    "Dcaron",
    "Dcy",
    "Del",
    "Delta",
    "Dfr",
    "DiacriticalAcute",
    "DiacriticalDot",
    "DiacriticalDoubleAcute",
    "DiacriticalGrave",
    "DiacriticalTilde",
    "Diamond",
    "DifferentialD",
    "Dopf",
    "Dot",
    "DotDot",
    "DotEqual",
    "DoubleContourIntegral",
    "DoubleDot",
    "DoubleDownArrow",
    "DoubleLeftArrow",
    "DoubleLeftRightArrow",
    "DoubleLeftTee",
    "DoubleLongLeftArrow",
    "DoubleLongLeftRightArrow",
    "DoubleLongRightArrow",
    "DoubleRightArrow",
    "DoubleRightTee",
    "DoubleUpArrow",
    "DoubleUpDownArrow",
    "DoubleVerticalBar",
    "DownArrow",
    "DownArrowBar",
    "DownArrowUpArrow",
    "DownBreve",
    "DownLeftRightVector",
    "DownLeftTeeVector",
    "DownLeftVector",
    "DownLeftVectorBar",
    "DownRightTeeVector",
    "DownRightVector",
    "DownRightVectorBar",
    "DownTee",
    "DownTeeArrow",
    "Downarrow",
    "Dscr",
    "Dstrok",
    "ENG",
    "ETH",
    "Eacute",
    "Ecaron",
    "Ecirc",
    "Ecy",
    "Edot",
    "Efr",
    "Egrave",
    "Element",
    "Emacr",
    "EmptySmallSquare",
    "EmptyVerySmallSquare",
    "Eogon",
    "Eopf",
    "Epsilon",
    "Equal",
    "EqualTilde",
    "Equilibrium",
    "Escr",
    "Esim",
    "Eta",
    "Euml",
    "Exists",
    "ExponentialE",
    "Fcy",
    "Ffr",
    "FilledSmallSquare",
    "FilledVerySmallSquare",
    "Fopf",
    "ForAll",
    "Fouriertrf",
    "Fscr",
    "GJcy",
    "GT",
    "Gamma",
    "Gammad",
    "Gbreve",
    "Gcedil",
    "Gcirc",
    "Gcy",
    "Gdot",
    "Gfr",
    "Gg",
    "Gopf",
    "GreaterEqual",
    "GreaterEqualLess",
    "GreaterFullEqual",
    "GreaterGreater",
    "GreaterLess",
    "GreaterSlantEqual",
    "GreaterTilde",
    "Gscr",
    "Gt",
    "HARDcy",
    "Hacek",
    "Hat",
    "Hcirc",
    "Hfr",
    "HilbertSpace",
    "Hopf",
    "HorizontalLine",
    "Hscr",
    "Hstrok",
    "HumpDownHump",
    "HumpEqual",
    "IEcy",
    "IJlig",
    "IOcy",
    "Iacute",
    "Icirc",
    "Icy",
    "Idot",
    "Ifr",
    "Igrave",
    "Im",
    "Imacr",
    "ImaginaryI",
    "Implies",
    "Int",
    "Integral",
    "Intersection",
    "InvisibleComma",
    "InvisibleTimes",
    "Iogon",
    "Iopf",
    "Iota",
    "Iscr",
    "Itilde",
    "Iukcy",
    "Iuml",
    "Jcirc",
    "Jcy",
    "Jfr",
    "Jopf",
    "Jscr",
    "Jsercy",
    "Jukcy",
    "KHcy",
    "KJcy",
    "Kappa",
    "Kcedil",
    "Kcy",
    "Kfr",
    "Kopf",
    "Kscr",
    "LJcy",
    "LT",
    "Lacute",
    "Lambda",
    "Lang",
    "Laplacetrf",
    "Larr",
    "Lcaron",
    "Lcedil",
    "Lcy",
    "LeftAngleBracket",
    "LeftArrow",
    "LeftArrowBar",
    "LeftArrowRightArrow",
    "LeftCeiling",
    "LeftDoubleBracket",
    "LeftDownTeeVector",
    "LeftDownVector",
    "LeftDownVectorBar",
    "LeftFloor",
    "LeftRightArrow",
    "LeftRightVector",
    "LeftTee",
    "LeftTeeArrow",
    "LeftTeeVector",
    "LeftTriangle",
    "LeftTriangleBar",
    "LeftTriangleEqual",
    "LeftUpDownVector",
    "LeftUpTeeVector",
    "LeftUpVector",
    "LeftUpVectorBar",
    "LeftVector",
    "LeftVectorBar",
    "Leftarrow",
    "Leftrightarrow",
    "LessEqualGreater",
    "LessFullEqual",
    "LessGreater",
    "LessLess",
    "LessSlantEqual",
    "LessTilde",
    "Lfr",
    "Ll",
    "Lleftarrow",
    "Lmidot",
    "LongLeftArrow",
    "LongLeftRightArrow",
    "LongRightArrow",
    "Longleftarrow",
    "Longleftrightarrow",
    "Longrightarrow",
    "Lopf",
    "LowerLeftArrow",
    "LowerRightArrow",
    "Lscr",
    "Lsh",
    "Lstrok",
    "Lt",
    "Map",
    "Mcy",
    "MediumSpace",
    "Mellintrf",
    "Mfr",
    "MinusPlus",
    "Mopf",
    "Mscr",
    "Mu",
    "NJcy",
    "Nacute",
    "Ncaron",
    "Ncedil",
    "Ncy",
    "NegativeMediumSpace",
    "NegativeThickSpace",
    "NegativeThinSpace",
    "NegativeVeryThinSpace",
    "NestedGreaterGreater",
    "NestedLessLess",
    "NewLine",
    "Nfr",
    "NoBreak",
    "NonBreakingSpace",
    "Nopf",
    "Not",
    "NotCongruent",
    "NotCupCap",
    "NotDoubleVerticalBar",
    "NotElement",
    "NotEqual",
    "NotEqualTilde",
    "NotExists",
    "NotGreater",
    "NotGreaterEqual",
    "NotGreaterFullEqual",
    "NotGreaterGreater",
    "NotGreaterLess",
    "NotGreaterSlantEqual",
    "NotGreaterTilde",
    "NotHumpDownHump",
    "NotHumpEqual",
    "NotLeftTriangle",
    "NotLeftTriangleBar",
    "NotLeftTriangleEqual",
    "NotLess",
    "NotLessEqual",
    "NotLessGreater",
    "NotLessLess",
    "NotLessSlantEqual",
    "NotLessTilde",
    "NotNestedGreaterGreater",
    "NotNestedLessLess",
    "NotPrecedes",
    "NotPrecedesEqual",
    "NotPrecedesSlantEqual",
    "NotReverseElement",
    "NotRightTriangle",
    "NotRightTriangleBar",
    "NotRightTriangleEqual",
    "NotSquareSubset",
    "NotSquareSubsetEqual",
    "NotSquareSuperset",
    "NotSquareSupersetEqual",
    "NotSubset",
    "NotSubsetEqual",
    "NotSucceeds",
    "NotSucceedsEqual",
    "NotSucceedsSlantEqual",
    "NotSucceedsTilde",
    "NotSuperset",
    "NotSupersetEqual",
    "NotTilde",
    "NotTildeEqual",
    "NotTildeFullEqual",
    "NotTildeTilde",
    "NotVerticalBar",
    "Nscr",
    "Ntilde",
    "Nu",
    "OElig",
    "Oacute",
    "Ocirc",
    "Ocy",
    "Odblac",
    "Ofr",
    "Ograve",
    "Omacr",
    "Omega",
    "Omicron",
    "Oopf",
    "OpenCurlyDoubleQuote",
    "OpenCurlyQuote",
    "Or",
    "Oscr",
    "Oslash",
    "Otilde",
    "Otimes",
    "Ouml",
    "OverBar",
    "OverBrace",
    "OverBracket",
    "OverParenthesis",
    "PartialD",
    "Pcy",
    "Pfr",
    "Phi",
    "Pi",
    "PlusMinus",
    "Poincareplane",
    "Popf",
    "Pr",
    "Precedes",
    "PrecedesEqual",
    "PrecedesSlantEqual",
    "PrecedesTilde",
    "Prime",
    "Product",
    "Proportion",
    "Proportional",
    "Pscr",
    "Psi",
    "QUOT",
    "Qfr",
    "Qopf",
    "Qscr",
    "RBarr",
    "REG",
    "Racute",
    "Rang",
    "Rarr",
    "Rarrtl",
    "Rcaron",
    "Rcedil",
    "Rcy",
    "Re",
    "ReverseElement",
    "ReverseEquilibrium",
    "ReverseUpEquilibrium",
    "Rfr",
    "Rho",
    "RightAngleBracket",
    "RightArrow",
    "RightArrowBar",
    "RightArrowLeftArrow",
    "RightCeiling",
    "RightDoubleBracket",
    "RightDownTeeVector",
    "RightDownVector",
    "RightDownVectorBar",
    "RightFloor",
    "RightTee",
    "RightTeeArrow",
    "RightTeeVector",
    "RightTriangle",
    "RightTriangleBar",
    "RightTriangleEqual",
    "RightUpDownVector",
    "RightUpTeeVector",
    "RightUpVector",
    "RightUpVectorBar",
    "RightVector",
    "RightVectorBar",
    "Rightarrow",
    "Ropf",
    "RoundImplies",
    "Rrightarrow",
    "Rscr",
    "Rsh",
    "RuleDelayed",
    "SHCHcy",
    "SHcy",
    "SOFTcy",
    "Sacute",
    "Sc",
    "Scaron",
    "Scedil",
    "Scirc",
    "Scy",
    "Sfr",
    "ShortDownArrow",
    "ShortLeftArrow",
    "ShortRightArrow",
    "ShortUpArrow",
    "Sigma",
    "SmallCircle",
    "Sopf",
    "Sqrt",
    "Square",
    "SquareIntersection",
    "SquareSubset",
    "SquareSubsetEqual",
    "SquareSuperset",
    "SquareSupersetEqual",
    "SquareUnion",
    "Sscr",
    "Star",
    "Sub",
    "Subset",
    "SubsetEqual",
    "Succeeds",
    "SucceedsEqual",
    "SucceedsSlantEqual",
    "SucceedsTilde",
    "SuchThat",
    "Sum",
    "Sup",
    "Superset",
    "SupersetEqual",
    "Supset",
    "THORN",
    "TRADE",
    "TSHcy",
    "TScy",
    "Tab",
    "Tau",
    "Tcaron",
    "Tcedil",
    "Tcy",
    "Tfr",
    "Therefore",
    "Theta",
    "ThickSpace",
    "ThinSpace",
    "Tilde",
    "TildeEqual",
    "TildeFullEqual",
    "TildeTilde",
    "Topf",
    "TripleDot",
    "Tscr",
    "Tstrok",
    "Uacute",
    "Uarr",
    "Uarrocir",
    "Ubrcy",
    "Ubreve",
    "Ucirc",
    "Ucy",
    "Udblac",
    "Ufr",
    "Ugrave",
    "Umacr",
    "UnderBar",
    "UnderBrace",
    "UnderBracket",
    "UnderParenthesis",
    "Union",
    "UnionPlus",
    "Uogon",
    "Uopf",
    "UpArrow",
    "UpArrowBar",
    "UpArrowDownArrow",
    "UpDownArrow",
    "UpEquilibrium",
    "UpTee",
    "UpTeeArrow",
    "Uparrow",
    "Updownarrow",
    "UpperLeftArrow",
    "UpperRightArrow",
    "Upsi",
    "Upsilon",
    "Uring",
    "Uscr",
    "Utilde",
    "Uuml",
    "VDash",
    "Vbar",
    "Vcy",
    "Vdash",
    "Vdashl",
    "Vee",
    "Verbar",
    "Vert",
    "VerticalBar",
    "VerticalLine",
    "VerticalSeparator",
    "VerticalTilde",
    "VeryThinSpace",
    "Vfr",
    "Vopf",
    "Vscr",
    "Vvdash",
    "Wcirc",
    "Wedge",
    "Wfr",
    "Wopf",
    "Wscr",
    "Xfr",
    "Xi",
    "Xopf",
    "Xscr",
    "YAcy",
    "YIcy",
    "YUcy",
    "Yacute",
    "Ycirc",
    "Ycy",
    "Yfr",
    "Yopf",
    "Yscr",
    "Yuml",
    "ZHcy",
    "Zacute",
    "Zcaron",
    "Zcy",
    "Zdot",
    "ZeroWidthSpace",
    "Zeta",
    "Zfr",
    "Zopf",
    "Zscr",
    "aacute",
    "abreve",
    "ac",
    "acE",
    "acd",
    "acirc",
    "acute",
    "acy",
    "aelig",
    "af",
    "afr",
    "agrave",
    "alefsym",
    "aleph",
    "alpha",
    "amacr",
    "amalg",
    "amp",
    "and",
    "andand",
    "andd",
    "andslope",
    "andv",
    "ang",
    "ange",
    "angle",
    "angmsd",
    "angmsdaa",
    "angmsdab",
    "angmsdac",
    "angmsdad",
    "angmsdae",
    "angmsdaf",
    "angmsdag",
    "angmsdah",
    "angrt",
    "angrtvb",
    "angrtvbd",
    "angsph",
    "angst",
    "angzarr",
    "aogon",
    "aopf",
    "ap",
    "apE",
    "apacir",
    "ape",
    "apid",
    "apos",
    "approx",
    "approxeq",
    "aring",
    "ascr",
    "ast",
    "asymp",
    "asympeq",
    "atilde",
    "auml",
    "awconint",
    "awint",
    "bNot",
    "backcong",
    "backepsilon",
    "backprime",
    "backsim",
    "backsimeq",
    "barvee",
    "barwed",
    "barwedge",
    "bbrk",
    "bbrktbrk",
    "bcong",
    "bcy",
    "bdquo",
    "becaus",
    "because",
    "bemptyv",
    "bepsi",
    "bernou",
    "beta",
    "beth",
    "between",
    "bfr",
    "bigcap",
    "bigcirc",
    "bigcup",
    "bigodot",
    "bigoplus",
    "bigotimes",
    "bigsqcup",
    "bigstar",
    "bigtriangledown",
    "bigtriangleup",
    "biguplus",
    "bigvee",
    "bigwedge",
    "bkarow",
    "blacklozenge",
    "blacksquare",
    "blacktriangle",
    "blacktriangledown",
    "blacktriangleleft",
    "blacktriangleright",
    "blank",
    "blk12",
    "blk14",
    "blk34",
    "block",
    "bne",
    "bnequiv",
    "bnot",
    "bopf",
    "bot",
    "bottom",
    "bowtie",
    "boxDL",
    "boxDR",
    "boxDl",
    "boxDr",
    "boxH",
    "boxHD",
    "boxHU",
    "boxHd",
    "boxHu",
    "boxUL",
    "boxUR",
    "boxUl",
    "boxUr",
    "boxV",
    "boxVH",
    "boxVL",
    "boxVR",
    "boxVh",
    "boxVl",
    "boxVr",
    "boxbox",
    "boxdL",
    "boxdR",
    "boxdl",
    "boxdr",
    "boxh",
    "boxhD",
    "boxhU",
    "boxhd",
    "boxhu",
    "boxminus",
    "boxplus",
    "boxtimes",
    "boxuL",
    "boxuR",
    "boxul",
    "boxur",
    "boxv",
    "boxvH",
    "boxvL",
    "boxvR",
    "boxvh",
    "boxvl",
    "boxvr",
    "bprime",
    "breve",
    "brvbar",
    "bscr",
    "bsemi",
    "bsim",
    "bsime",
    "bsol",
    "bsolb",
    "bsolhsub",
    "bull",
    "bullet",
    "bump",
    "bumpE",
    "bumpe",
    "bumpeq",
    "cacute",
    "cap",
    "capand",
    "capbrcup",
    "capcap",
    "capcup",
    "capdot",
    "caps",
    "caret",
    "caron",
    "ccaps",
    "ccaron",
    "ccedil",
    "ccirc",
    "ccups",
    "ccupssm",
    "cdot",
    "cedil",
    "cemptyv",
    "cent",
    "centerdot",
    "cfr",
    "chcy",
    "check",
    "checkmark",
    "chi",
    "cir",
    "cirE",
    "circ",
    "circeq",
    "circlearrowleft",
    "circlearrowright",
    "circledR",
    "circledS",
    "circledast",
    "circledcirc",
    "circleddash",
    "cire",
    "cirfnint",
    "cirmid",
    "cirscir",
    "clubs",
    "clubsuit",
    "colon",
    "colone",
    "coloneq",
    "comma",
    "commat",
    "comp",
    "compfn",
    "complement",
    "complexes",
    "cong",
    "congdot",
    "conint",
    "copf",
    "coprod",
    "copy",
    "copysr",
    "crarr",
    "cross",
    "cscr",
    "csub",
    "csube",
    "csup",
    "csupe",
    "ctdot",
    "cudarrl",
    "cudarrr",
    "cuepr",
    "cuesc",
    "cularr",
    "cularrp",
    "cup",
    "cupbrcap",
    "cupcap",
    "cupcup",
    "cupdot",
    "cupor",
    "cups",
    "curarr",
    "curarrm",
    "curlyeqprec",
    "curlyeqsucc",
    "curlyvee",
    "curlywedge",
    "curren",
    "curvearrowleft",
    "curvearrowright",
    "cuvee",
    "cuwed",
    "cwconint",
    "cwint",
    "cylcty",
    "dArr",
    "dHar",
    "dagger",
    "daleth",
    "darr",
    "dash",
    "dashv",
    "dbkarow",
    "dblac",
    "dcaron",
    "dcy",
    "dd",
    "ddagger",
    "ddarr",
    "ddotseq",
    "deg",
    "delta",
    "demptyv",
    "dfisht",
    "dfr",
    "dharl",
    "dharr",
    "diam",
    "diamond",
    "diamondsuit",
    "diams",
    "die",
    "digamma",
    "disin",
    "div",
    "divide",
    "divideontimes",
    "divonx",
    "djcy",
    "dlcorn",
    "dlcrop",
    "dollar",
    "dopf",
    "dot",
    "doteq",
    "doteqdot",
    "dotminus",
    "dotplus",
    "dotsquare",
    "doublebarwedge",
    "downarrow",
    "downdownarrows",
    "downharpoonleft",
    "downharpoonright",
    "drbkarow",
    "drcorn",
    "drcrop",
    "dscr",
    "dscy",
    "dsol",
    "dstrok",
    "dtdot",
    "dtri",
    "dtrif",
    "duarr",
    "duhar",
    "dwangle",
    "dzcy",
    "dzigrarr",
    "eDDot",
    "eDot",
    "eacute",
    "easter",
    "ecaron",
    "ecir",
    "ecirc",
    "ecolon",
    "ecy",
    "edot",
    "ee",
    "efDot",
    "efr",
    "eg",
    "egrave",
    "egs",
    "egsdot",
    "el",
    "elinters",
    "ell",
    "els",
    "elsdot",
    "emacr",
    "empty",
    "emptyset",
    "emptyv",
    "emsp13",
    "emsp14",
    "emsp",
    "eng",
    "ensp",
    "eogon",
    "eopf",
    "epar",
    "eparsl",
    "eplus",
    "epsi",
    "epsilon",
    "epsiv",
    "eqcirc",
    "eqcolon",
    "eqsim",
    "eqslantgtr",
    "eqslantless",
    "equals",
    "equest",
    "equiv",
    "equivDD",
    "eqvparsl",
    "erDot",
    "erarr",
    "escr",
    "esdot",
    "esim",
    "eta",
    "eth",
    "euml",
    "euro",
    "excl",
    "exist",
    "expectation",
    "exponentiale",
    "fallingdotseq",
    "fcy",
    "female",
    "ffilig",
    "fflig",
    "ffllig",
    "ffr",
    "filig",
    "fjlig",
    "flat",
    "fllig",
    "fltns",
    "fnof",
    "fopf",
    "forall",
    "fork",
    "forkv",
    "fpartint",
    "frac12",
    "frac13",
    "frac14",
    "frac15",
    "frac16",
    "frac18",
    "frac23",
    "frac25",
    "frac34",
    "frac35",
    "frac38",
    "frac45",
    "frac56",
    "frac58",
    "frac78",
    "frasl",
    "frown",
    "fscr",
    "gE",
    "gEl",
    "gacute",
    "gamma",
    "gammad",
    "gap",
    "gbreve",
    "gcirc",
    "gcy",
    "gdot",
    "ge",
    "gel",
    "geq",
    "geqq",
    "geqslant",
    "ges",
    "gescc",
    "gesdot",
    "gesdoto",
    "gesdotol",
    "gesl",
    "gesles",
    "gfr",
    "gg",
    "ggg",
    "gimel",
    "gjcy",
    "gl",
    "glE",
    "gla",
    "glj",
    "gnE",
    "gnap",
    "gnapprox",
    "gne",
    "gneq",
    "gneqq",
    "gnsim",
    "gopf",
    "grave",
    "gscr",
    "gsim",
    "gsime",
    "gsiml",
    "gt",
    "gtcc",
    "gtcir",
    "gtdot",
    "gtlPar",
    "gtquest",
    "gtrapprox",
    "gtrarr",
    "gtrdot",
    "gtreqless",
    "gtreqqless",
    "gtrless",
    "gtrsim",
    "gvertneqq",
    "gvnE",
    "hArr",
    "hairsp",
    "half",
    "hamilt",
    "hardcy",
    "harr",
    "harrcir",
    "harrw",
    "hbar",
    "hcirc",
    "hearts",
    "heartsuit",
    "hellip",
    "hercon",
    "hfr",
    "hksearow",
    "hkswarow",
    "hoarr",
    "homtht",
    "hookleftarrow",
    "hookrightarrow",
    "hopf",
    "horbar",
    "hscr",
    "hslash",
    "hstrok",
    "hybull",
    "hyphen",
    "iacute",
    "ic",
    "icirc",
    "icy",
    "iecy",
    "iexcl",
    "iff",
    "ifr",
    "igrave",
    "ii",
    "iiiint",
    "iiint",
    "iinfin",
    "iiota",
    "ijlig",
    "imacr",
    "image",
    "imagline",
    "imagpart",
    "imath",
    "imof",
    "imped",
    "in",
    "incare",
    "infin",
    "infintie",
    "inodot",
    "int",
    "intcal",
    "integers",
    "intercal",
    "intlarhk",
    "intprod",
    "iocy",
    "iogon",
    "iopf",
    "iota",
    "iprod",
    "iquest",
    "iscr",
    "isin",
    "isinE",
    "isindot",
    "isins",
    "isinsv",
    "isinv",
    "it",
    "itilde",
    "iukcy",
    "iuml",
    "jcirc",
    "jcy",
    "jfr",
    "jmath",
    "jopf",
    "jscr",
    "jsercy",
    "jukcy",
    "kappa",
    "kappav",
    "kcedil",
    "kcy",
    "kfr",
    "kgreen",
    "khcy",
    "kjcy",
    "kopf",
    "kscr",
    "lAarr",
    "lArr",
    "lAtail",
    "lBarr",
    "lE",
    "lEg",
    "lHar",
    "lacute",
    "laemptyv",
    "lagran",
    "lambda",
    "lang",
    "langd",
    "langle",
    "lap",
    "laquo",
    "larr",
    "larrb",
    "larrbfs",
    "larrfs",
    "larrhk",
    "larrlp",
    "larrpl",
    "larrsim",
    "larrtl",
    "lat",
    "latail",
    "late",
    "lates",
    "lbarr",
    "lbbrk",
    "lbrace",
    "lbrack",
    "lbrke",
    "lbrksld",
    "lbrkslu",
    "lcaron",
    "lcedil",
    "lceil",
    "lcub",
    "lcy",
    "ldca",
    "ldquo",
    "ldquor",
    "ldrdhar",
    "ldrushar",
    "ldsh",
    "le",
    "leftarrow",
    "leftarrowtail",
    "leftharpoondown",
    "leftharpoonup",
    "leftleftarrows",
    "leftrightarrow",
    "leftrightarrows",
    "leftrightharpoons",
    "leftrightsquigarrow",
    "leftthreetimes",
    "leg",
    "leq",
    "leqq",
    "leqslant",
    "les",
    "lescc",
    "lesdot",
    "lesdoto",
    "lesdotor",
    "lesg",
    "lesges",
    "lessapprox",
    "lessdot",
    "lesseqgtr",
    "lesseqqgtr",
    "lessgtr",
    "lesssim",
    "lfisht",
    "lfloor",
    "lfr",
    "lg",
    "lgE",
    "lhard",
    "lharu",
    "lharul",
    "lhblk",
    "ljcy",
    "ll",
    "llarr",
    "llcorner",
    "llhard",
    "lltri",
    "lmidot",
    "lmoust",
    "lmoustache",
    "lnE",
    "lnap",
    "lnapprox",
    "lne",
    "lneq",
    "lneqq",
    "lnsim",
    "loang",
    "loarr",
    "lobrk",
    "longleftarrow",
    "longleftrightarrow",
    "longmapsto",
    "longrightarrow",
    "looparrowleft",
    "looparrowright",
    "lopar",
    "lopf",
    "loplus",
    "lotimes",
    "lowast",
    "lowbar",
    "loz",
    "lozenge",
    "lozf",
    "lpar",
    "lparlt",
    "lrarr",
    "lrcorner",
    "lrhar",
    "lrhard",
    "lrm",
    "lrtri",
    "lsaquo",
    "lscr",
    "lsh",
    "lsim",
    "lsime",
    "lsimg",
    "lsqb",
    "lsquo",
    "lsquor",
    "lstrok",
    "lt",
    "ltcc",
    "ltcir",
    "ltdot",
    "lthree",
    "ltimes",
    "ltlarr",
    "ltquest",
    "ltrPar",
    "ltri",
    "ltrie",
    "ltrif",
    "lurdshar",
    "luruhar",
    "lvertneqq",
    "lvnE",
    "mDDot",
    "macr",
    "male",
    "malt",
    "maltese",
    "map",
    "mapsto",
    "mapstodown",
    "mapstoleft",
    "mapstoup",
    "marker",
    "mcomma",
    "mcy",
    "mdash",
    "measuredangle",
    "mfr",
    "mho",
    "micro",
    "mid",
    "midast",
    "midcir",
    "middot",
    "minus",
    "minusb",
    "minusd",
    "minusdu",
    "mlcp",
    "mldr",
    "mnplus",
    "models",
    "mopf",
    "mp",
    "mscr",
    "mstpos",
    "mu",
    "multimap",
    "mumap",
    "nGg",
    "nGt",
    "nGtv",
    "nLeftarrow",
    "nLeftrightarrow",
    "nLl",
    "nLt",
    "nLtv",
    "nRightarrow",
    "nVDash",
    "nVdash",
    "nabla",
    "nacute",
    "nang",
    "nap",
    "napE",
    "napid",
    "napos",
    "napprox",
    "natur",
    "natural",
    "naturals",
    "nbsp",
    "nbump",
    "nbumpe",
    "ncap",
    "ncaron",
    "ncedil",
    "ncong",
    "ncongdot",
    "ncup",
    "ncy",
    "ndash",
    "ne",
    "neArr",
    "nearhk",
    "nearr",
    "nearrow",
    "nedot",
    "nequiv",
    "nesear",
    "nesim",
    "nexist",
    "nexists",
    "nfr",
    "ngE",
    "nge",
    "ngeq",
    "ngeqq",
    "ngeqslant",
    "nges",
    "ngsim",
    "ngt",
    "ngtr",
    "nhArr",
    "nharr",
    "nhpar",
    "ni",
    "nis",
    "nisd",
    "niv",
    "njcy",
    "nlArr",
    "nlE",
    "nlarr",
    "nldr",
    "nle",
    "nleftarrow",
    "nleftrightarrow",
    "nleq",
    "nleqq",
    "nleqslant",
    "nles",
    "nless",
    "nlsim",
    "nlt",
    "nltri",
    "nltrie",
    "nmid",
    "nopf",
    "not",
    "notin",
    "notinE",
    "notindot",
    "notinva",
    "notinvb",
    "notinvc",
    "notni",
    "notniva",
    "notnivb",
    "notnivc",
    "npar",
    "nparallel",
    "nparsl",
    "npart",
    "npolint",
    "npr",
    "nprcue",
    "npre",
    "nprec",
    "npreceq",
    "nrArr",
    "nrarr",
    "nrarrc",
    "nrarrw",
    "nrightarrow",
    "nrtri",
    "nrtrie",
    "nsc",
    "nsccue",
    "nsce",
    "nscr",
    "nshortmid",
    "nshortparallel",
    "nsim",
    "nsime",
    "nsimeq",
    "nsmid",
    "nspar",
    "nsqsube",
    "nsqsupe",
    "nsub",
    "nsubE",
    "nsube",
    "nsubset",
    "nsubseteq",
    "nsubseteqq",
    "nsucc",
    "nsucceq",
    "nsup",
    "nsupE",
    "nsupe",
    "nsupset",
    "nsupseteq",
    "nsupseteqq",
    "ntgl",
    "ntilde",
    "ntlg",
    "ntriangleleft",
    "ntrianglelefteq",
    "ntriangleright",
    "ntrianglerighteq",
    "nu",
    "num",
    "numero",
    "numsp",
    "nvDash",
    "nvHarr",
    "nvap",
    "nvdash",
    "nvge",
    "nvgt",
    "nvinfin",
    "nvlArr",
    "nvle",
    "nvlt",
    "nvltrie",
    "nvrArr",
    "nvrtrie",
    "nvsim",
    "nwArr",
    "nwarhk",
    "nwarr",
    "nwarrow",
    "nwnear",
    "oS",
    "oacute",
    "oast",
    "ocir",
    "ocirc",
    "ocy",
    "odash",
    "odblac",
    "odiv",
    "odot",
    "odsold",
    "oelig",
    "ofcir",
    "ofr",
    "ogon",
    "ograve",
    "ogt",
    "ohbar",
    "ohm",
    "oint",
    "olarr",
    "olcir",
    "olcross",
    "oline",
    "olt",
    "omacr",
    "omega",
    "omicron",
    "omid",
    "ominus",
    "oopf",
    "opar",
    "operp",
    "oplus",
    "or",
    "orarr",
    "ord",
    "order",
    "orderof",
    "ordf",
    "ordm",
    "origof",
    "oror",
    "orslope",
    "orv",
    "oscr",
    "oslash",
    "osol",
    "otilde",
    "otimes",
    "otimesas",
    "ouml",
    "ovbar",
    "par",
    "para",
    "parallel",
    "parsim",
    "parsl",
    "part",
    "pcy",
    "percnt",
    "period",
    "permil",
    "perp",
    "pertenk",
    "pfr",
    "phi",
    "phiv",
    "phmmat",
    "phone",
    "pi",
    "pitchfork",
    "piv",
    "planck",
    "planckh",
    "plankv",
    "plus",
    "plusacir",
    "plusb",
    "pluscir",
    "plusdo",
    "plusdu",
    "pluse",
    "plusmn",
    "plussim",
    "plustwo",
    "pm",
    "pointint",
    "popf",
    "pound",
    "pr",
    "prE",
    "prap",
    "prcue",
    "pre",
    "prec",
    "precapprox",
    "preccurlyeq",
    "preceq",
    "precnapprox",
    "precneqq",
    "precnsim",
    "precsim",
    "prime",
    "primes",
    "prnE",
    "prnap",
    "prnsim",
    "prod",
    "profalar",
    "profline",
    "profsurf",
    "prop",
    "propto",
    "prsim",
    "prurel",
    "pscr",
    "psi",
    "puncsp",
    "qfr",
    "qint",
    "qopf",
    "qprime",
    "qscr",
    "quaternions",
    "quatint",
    "quest",
    "questeq",
    "quot",
    "rAarr",
    "rArr",
    "rAtail",
    "rBarr",
    "rHar",
    "race",
    "racute",
    "radic",
    "raemptyv",
    "rang",
    "rangd",
    "range",
    "rangle",
    "raquo",
    "rarr",
    "rarrap",
    "rarrb",
    "rarrbfs",
    "rarrc",
    "rarrfs",
    "rarrhk",
    "rarrlp",
    "rarrpl",
    "rarrsim",
    "rarrtl",
    "rarrw",
    "ratail",
    "ratio",
    "rationals",
    "rbarr",
    "rbbrk",
    "rbrace",
    "rbrack",
    "rbrke",
    "rbrksld",
    "rbrkslu",
    "rcaron",
    "rcedil",
    "rceil",
    "rcub",
    "rcy",
    "rdca",
    "rdldhar",
    "rdquo",
    "rdquor",
    "rdsh",
    "real",
    "realine",
    "realpart",
    "reals",
    "rect",
    "reg",
    "rfisht",
    "rfloor",
    "rfr",
    "rhard",
    "rharu",
    "rharul",
    "rho",
    "rhov",
    "rightarrow",
    "rightarrowtail",
    "rightharpoondown",
    "rightharpoonup",
    "rightleftarrows",
    "rightleftharpoons",
    "rightrightarrows",
    "rightsquigarrow",
    "rightthreetimes",
    "ring",
    "risingdotseq",
    "rlarr",
    "rlhar",
    "rlm",
    "rmoust",
    "rmoustache",
    "rnmid",
    "roang",
    "roarr",
    "robrk",
    "ropar",
    "ropf",
    "roplus",
    "rotimes",
    "rpar",
    "rpargt",
    "rppolint",
    "rrarr",
    "rsaquo",
    "rscr",
    "rsh",
    "rsqb",
    "rsquo",
    "rsquor",
    "rthree",
    "rtimes",
    "rtri",
    "rtrie",
    "rtrif",
    "rtriltri",
    "ruluhar",
    "rx",
    "sacute",
    "sbquo",
    "sc",
    "scE",
    "scap",
    "scaron",
    "sccue",
    "sce",
    "scedil",
    "scirc",
    "scnE",
    "scnap",
    "scnsim",
    "scpolint",
    "scsim",
    "scy",
    "sdot",
    "sdotb",
    "sdote",
    "seArr",
    "searhk",
    "searr",
    "searrow",
    "sect",
    "semi",
    "seswar",
    "setminus",
    "setmn",
    "sext",
    "sfr",
    "sfrown",
    "sharp",
    "shchcy",
    "shcy",
    "shortmid",
    "shortparallel",
    "shy",
    "sigma",
    "sigmaf",
    "sigmav",
    "sim",
    "simdot",
    "sime",
    "simeq",
    "simg",
    "simgE",
    "siml",
    "simlE",
    "simne",
    "simplus",
    "simrarr",
    "slarr",
    "smallsetminus",
    "smashp",
    "smeparsl",
    "smid",
    "smile",
    "smt",
    "smte",
    "smtes",
    "softcy",
    "sol",
    "solb",
    "solbar",
    "sopf",
    "spades",
    "spadesuit",
    "spar",
    "sqcap",
    "sqcaps",
    "sqcup",
    "sqcups",
    "sqsub",
    "sqsube",
    "sqsubset",
    "sqsubseteq",
    "sqsup",
    "sqsupe",
    "sqsupset",
    "sqsupseteq",
    "squ",
    "square",
    "squarf",
    "squf",
    "srarr",
    "sscr",
    "ssetmn",
    "ssmile",
    "sstarf",
    "star",
    "starf",
    "straightepsilon",
    "straightphi",
    "strns",
    "sub",
    "subE",
    "subdot",
    "sube",
    "subedot",
    "submult",
    "subnE",
    "subne",
    "subplus",
    "subrarr",
    "subset",
    "subseteq",
    "subseteqq",
    "subsetneq",
    "subsetneqq",
    "subsim",
    "subsub",
    "subsup",
    "succ",
    "succapprox",
    "succcurlyeq",
    "succeq",
    "succnapprox",
    "succneqq",
    "succnsim",
    "succsim",
    "sum",
    "sung",
    "sup1",
    "sup2",
    "sup3",
    "sup",
    "supE",
    "supdot",
    "supdsub",
    "supe",
    "supedot",
    "suphsol",
    "suphsub",
    "suplarr",
    "supmult",
    "supnE",
    "supne",
    "supplus",
    "supset",
    "supseteq",
    "supseteqq",
    "supsetneq",
    "supsetneqq",
    "supsim",
    "supsub",
    "supsup",
    "swArr",
    "swarhk",
    "swarr",
    "swarrow",
    "swnwar",
    "szlig",
    "target",
    "tau",
    "tbrk",
    "tcaron",
    "tcedil",
    "tcy",
    "tdot",
    "telrec",
    "tfr",
    "there4",
    "therefore",
    "theta",
    "thetasym",
    "thetav",
    "thickapprox",
    "thicksim",
    "thinsp",
    "thkap",
    "thksim",
    "thorn",
    "tilde",
    "times",
    "timesb",
    "timesbar",
    "timesd",
    "tint",
    "toea",
    "top",
    "topbot",
    "topcir",
    "topf",
    "topfork",
    "tosa",
    "tprime",
    "trade",
    "triangle",
    "triangledown",
    "triangleleft",
    "trianglelefteq",
    "triangleq",
    "triangleright",
    "trianglerighteq",
    "tridot",
    "trie",
    "triminus",
    "triplus",
    "trisb",
    "tritime",
    "trpezium",
    "tscr",
    "tscy",
    "tshcy",
    "tstrok",
    "twixt",
    "twoheadleftarrow",
    "twoheadrightarrow",
    "uArr",
    "uHar",
    "uacute",
    "uarr",
    "ubrcy",
    "ubreve",
    "ucirc",
    "ucy",
    "udarr",
    "udblac",
    "udhar",
    "ufisht",
    "ufr",
    "ugrave",
    "uharl",
    "uharr",
    "uhblk",
    "ulcorn",
    "ulcorner",
    "ulcrop",
    "ultri",
    "umacr",
    "uml",
    "uogon",
    "uopf",
    "uparrow",
    "updownarrow",
    "upharpoonleft",
    "upharpoonright",
    "uplus",
    "upsi",
    "upsih",
    "upsilon",
    "upuparrows",
    "urcorn",
    "urcorner",
    "urcrop",
    "uring",
    "urtri",
    "uscr",
    "utdot",
    "utilde",
    "utri",
    "utrif",
    "uuarr",
    "uuml",
    "uwangle",
    "vArr",
    "vBar",
    "vBarv",
    "vDash",
    "vangrt",
    "varepsilon",
    "varkappa",
    "varnothing",
    "varphi",
    "varpi",
    "varpropto",
    "varr",
    "varrho",
    "varsigma",
    "varsubsetneq",
    "varsubsetneqq",
    "varsupsetneq",
    "varsupsetneqq",
    "vartheta",
    "vartriangleleft",
    "vartriangleright",
    "vcy",
    "vdash",
    "vee",
    "veebar",
    "veeeq",
    "vellip",
    "verbar",
    "vert",
    "vfr",
    "vltri",
    "vnsub",
    "vnsup",
    "vopf",
    "vprop",
    "vrtri",
    "vscr",
    "vsubnE",
    "vsubne",
    "vsupnE",
    "vsupne",
    "vzigzag",
    "wcirc",
    "wedbar",
    "wedge",
    "wedgeq",
    "weierp",
    "wfr",
    "wopf",
    "wp",
    "wr",
    "wreath",
    "wscr",
    "xcap",
    "xcirc",
    "xcup",
    "xdtri",
    "xfr",
    "xhArr",
    "xharr",
    "xi",
    "xlArr",
    "xlarr",
    "xmap",
    "xnis",
    "xodot",
    "xopf",
    "xoplus",
    "xotime",
    "xrArr",
    "xrarr",
    "xscr",
    "xsqcup",
    "xuplus",
    "xutri",
    "xvee",
    "xwedge",
    "yacute",
    "yacy",
    "ycirc",
    "ycy",
    "yen",
    "yfr",
    "yicy",
    "yopf",
    "yscr",
    "yucy",
    "yuml",
    "zacute",
    "zcaron",
    "zcy",
    "zdot",
    "zeetrf",
    "zeta",
    "zfr",
    "zhcy",
    "zigrarr",
    "zopf",
    "zscr",
    "zwj",
    "zwnj",
];

/// List of values corresponding to names of named
/// [character references][character_reference].
///
/// The corresponding names of this list are stored in
/// [`CHARACTER_REFERENCE_NAMES`][].
/// They correspond through their index.
///
/// ## References
///
/// *   [*¬ß 2.5 Entity and numeric character references* in `CommonMark`](https://spec.commonmark.org/0.30/#entity-and-numeric-character-references)
///
/// [character_reference]: crate::construct::character_reference
pub const CHARACTER_REFERENCE_VALUES: [&str; 2125] = [
    "√Ü", "&", "√Å", "ƒÇ", "√Ç", "–ê", "ùîÑ", "√Ä", "Œë", "ƒÄ", "‚©ì", "ƒÑ", "ùî∏", "‚Å°", "√Ö", "ùíú", "‚âî", "√É", "√Ñ",
    "‚àñ", "‚´ß", "‚åÜ", "–ë", "‚àµ", "‚Ñ¨", "Œí", "ùîÖ", "ùîπ", "Àò", "‚Ñ¨", "‚âé", "–ß", "¬©", "ƒÜ", "‚ãí", "‚ÖÖ", "‚Ñ≠", "ƒå",
    "√á", "ƒà", "‚à∞", "ƒä", "¬∏", "¬∑", "‚Ñ≠", "Œß", "‚äô", "‚äñ", "‚äï", "‚äó", "‚à≤", "‚Äù", "‚Äô", "‚à∑", "‚©¥", "‚â°", "‚àØ",
    "‚àÆ", "‚ÑÇ", "‚àê", "‚à≥", "‚®Ø", "ùíû", "‚ãì", "‚âç", "‚ÖÖ", "‚§ë", "–Ç", "–Ö", "–è", "‚Ä°", "‚Ü°", "‚´§", "ƒé", "–î", "‚àá",
    "Œî", "ùîá", "¬¥", "Àô", "Àù", "`", "Àú", "‚ãÑ", "‚ÖÜ", "ùîª", "¬®", "‚Éú", "‚âê", "‚àØ", "¬®", "‚áì", "‚áê", "‚áî", "‚´§",
    "‚ü∏", "‚ü∫", "‚üπ", "‚áí", "‚ä®", "‚áë", "‚áï", "‚à•", "‚Üì", "‚§ì", "‚áµ", "Ãë", "‚•ê", "‚•û", "‚ÜΩ", "‚•ñ", "‚•ü", "‚áÅ", "‚•ó",
    "‚ä§", "‚Üß", "‚áì", "ùíü", "ƒê", "≈ä", "√ê", "√â", "ƒö", "√ä", "–≠", "ƒñ", "ùîà", "√à", "‚àà", "ƒí", "‚óª", "‚ñ´", "ƒò",
    "ùîº", "Œï", "‚©µ", "‚âÇ", "‚áå", "‚Ñ∞", "‚©≥", "Œó", "√ã", "‚àÉ", "‚Öá", "–§", "ùîâ", "‚óº", "‚ñ™", "ùîΩ", "‚àÄ", "‚Ñ±", "‚Ñ±",
    "–É", ">", "Œì", "œú", "ƒû", "ƒ¢", "ƒú", "–ì", "ƒ†", "ùîä", "‚ãô", "ùîæ", "‚â•", "‚ãõ", "‚âß", "‚™¢", "‚â∑", "‚©æ", "‚â≥",
    "ùí¢", "‚â´", "–™", "Àá", "^", "ƒ§", "‚Ñå", "‚Ñã", "‚Ñç", "‚îÄ", "‚Ñã", "ƒ¶", "‚âé", "‚âè", "–ï", "ƒ≤", "–Å", "√ç", "√é",
    "–ò", "ƒ∞", "‚Ñë", "√å", "‚Ñë", "ƒ™", "‚Öà", "‚áí", "‚à¨", "‚à´", "‚ãÇ", "‚Å£", "‚Å¢", "ƒÆ", "ùïÄ", "Œô", "‚Ñê", "ƒ®", "–Ü",
    "√è", "ƒ¥", "–ô", "ùîç", "ùïÅ", "ùí•", "–à", "–Ñ", "–•", "–å", "Œö", "ƒ∂", "–ö", "ùîé", "ùïÇ", "ùí¶", "–â", "<", "ƒπ",
    "Œõ", "‚ü™", "‚Ñí", "‚Üû", "ƒΩ", "ƒª", "–õ", "‚ü®", "‚Üê", "‚á§", "‚áÜ", "‚åà", "‚ü¶", "‚•°", "‚áÉ", "‚•ô", "‚åä", "‚Üî", "‚•é",
    "‚ä£", "‚Ü§", "‚•ö", "‚ä≤", "‚ßè", "‚ä¥", "‚•ë", "‚•†", "‚Üø", "‚•ò", "‚Üº", "‚•í", "‚áê", "‚áî", "‚ãö", "‚â¶", "‚â∂", "‚™°", "‚©Ω",
    "‚â≤", "ùîè", "‚ãò", "‚áö", "ƒø", "‚üµ", "‚ü∑", "‚ü∂", "‚ü∏", "‚ü∫", "‚üπ", "ùïÉ", "‚Üô", "‚Üò", "‚Ñí", "‚Ü∞", "≈Å", "‚â™", "‚§Ö",
    "–ú", "‚Åü", "‚Ñ≥", "ùîê", "‚àì", "ùïÑ", "‚Ñ≥", "Œú", "–ä", "≈É", "≈á", "≈Ö", "–ù", "\u{200B}", "\u{200B}",
    "\u{200B}", "\u{200B}", "‚â´", "‚â™", "\n", "ùîë", "\u{2060}", " ", "‚Ñï", "‚´¨", "‚â¢", "‚â≠", "‚à¶", "‚àâ",
    "‚â†", "‚âÇÃ∏", "‚àÑ", "‚âØ", "‚â±", "‚âßÃ∏", "‚â´Ã∏", "‚âπ", "‚©æÃ∏", "‚âµ", "‚âéÃ∏", "‚âèÃ∏", "‚ã™", "‚ßèÃ∏", "‚ã¨", "‚âÆ", "‚â∞", "‚â∏", "‚â™Ã∏",
    "‚©ΩÃ∏", "‚â¥", "‚™¢Ã∏", "‚™°Ã∏", "‚äÄ", "‚™ØÃ∏", "‚ã†", "‚àå", "‚ã´", "‚ßêÃ∏", "‚ã≠", "‚äèÃ∏", "‚ã¢", "‚äêÃ∏", "‚ã£", "‚äÇ‚Éí", "‚äà", "‚äÅ", "‚™∞Ã∏",
    "‚ã°", "‚âøÃ∏", "‚äÉ‚Éí", "‚äâ", "‚âÅ", "‚âÑ", "‚âá", "‚ââ", "‚à§", "ùí©", "√ë", "Œù", "≈í", "√ì", "√î", "–û", "≈ê", "ùîí", "√í",
    "≈å", "Œ©", "Œü", "ùïÜ", "‚Äú", "‚Äò", "‚©î", "ùí™", "√ò", "√ï", "‚®∑", "√ñ", "‚Äæ", "‚èû", "‚é¥", "‚èú", "‚àÇ", "–ü", "ùîì",
    "Œ¶", "Œ†", "¬±", "‚Ñå", "‚Ñô", "‚™ª", "‚â∫", "‚™Ø", "‚âº", "‚âæ", "‚Ä≥", "‚àè", "‚à∑", "‚àù", "ùí´", "Œ®", "\"", "ùîî", "‚Ñö",
    "ùí¨", "‚§ê", "¬Æ", "≈î", "‚ü´", "‚Ü†", "‚§ñ", "≈ò", "≈ñ", "–†", "‚Ñú", "‚àã", "‚áã", "‚•Ø", "‚Ñú", "Œ°", "‚ü©", "‚Üí", "‚á•",
    "‚áÑ", "‚åâ", "‚üß", "‚•ù", "‚áÇ", "‚•ï", "‚åã", "‚ä¢", "‚Ü¶", "‚•õ", "‚ä≥", "‚ßê", "‚äµ", "‚•è", "‚•ú", "‚Üæ", "‚•î", "‚áÄ", "‚•ì",
    "‚áí", "‚Ñù", "‚•∞", "‚áõ", "‚Ñõ", "‚Ü±", "‚ß¥", "–©", "–®", "–¨", "≈ö", "‚™º", "≈†", "≈û", "≈ú", "–°", "ùîñ", "‚Üì", "‚Üê",
    "‚Üí", "‚Üë", "Œ£", "‚àò", "ùïä", "‚àö", "‚ñ°", "‚äì", "‚äè", "‚äë", "‚äê", "‚äí", "‚äî", "ùíÆ", "‚ãÜ", "‚ãê", "‚ãê", "‚äÜ", "‚âª",
    "‚™∞", "‚âΩ", "‚âø", "‚àã", "‚àë", "‚ãë", "‚äÉ", "‚äá", "‚ãë", "√û", "‚Ñ¢", "–ã", "–¶", "\t", "Œ§", "≈§", "≈¢", "–¢", "ùîó",
    "‚à¥", "Œò", "‚Åü‚Ää", "‚Äâ", "‚àº", "‚âÉ", "‚âÖ", "‚âà", "ùïã", "‚Éõ", "ùíØ", "≈¶", "√ö", "‚Üü", "‚•â", "–é", "≈¨", "√õ", "–£",
    "≈∞", "ùîò", "√ô", "≈™", "_", "‚èü", "‚éµ", "‚èù", "‚ãÉ", "‚äé", "≈≤", "ùïå", "‚Üë", "‚§í", "‚áÖ", "‚Üï", "‚•Æ", "‚ä•", "‚Ü•",
    "‚áë", "‚áï", "‚Üñ", "‚Üó", "œí", "Œ•", "≈Æ", "ùí∞", "≈®", "√ú", "‚ä´", "‚´´", "–í", "‚ä©", "‚´¶", "‚ãÅ", "‚Äñ", "‚Äñ", "‚à£",
    "|", "‚ùò", "‚âÄ", "‚Ää", "ùîô", "ùïç", "ùí±", "‚ä™", "≈¥", "‚ãÄ", "ùîö", "ùïé", "ùí≤", "ùîõ", "Œû", "ùïè", "ùí≥", "–Ø", "–á",
    "–Æ", "√ù", "≈∂", "–´", "ùîú", "ùïê", "ùí¥", "≈∏", "–ñ", "≈π", "≈Ω", "–ó", "≈ª", "\u{200B}", "Œñ", "‚Ñ®", "‚Ñ§",
    "ùíµ", "√°", "ƒÉ", "‚àæ", "‚àæÃ≥", "‚àø", "√¢", "¬¥", "–∞", "√¶", "‚Å°", "ùîû", "√†", "‚Ñµ", "‚Ñµ", "Œ±", "ƒÅ", "‚®ø", "&",
    "‚àß", "‚©ï", "‚©ú", "‚©ò", "‚©ö", "‚à†", "‚¶§", "‚à†", "‚à°", "‚¶®", "‚¶©", "‚¶™", "‚¶´", "‚¶¨", "‚¶≠", "‚¶Æ", "‚¶Ø", "‚àü", "‚äæ",
    "‚¶ù", "‚à¢", "√Ö", "‚çº", "ƒÖ", "ùïí", "‚âà", "‚©∞", "‚©Ø", "‚âä", "‚âã", "'", "‚âà", "‚âä", "√•", "ùí∂", "*", "‚âà", "‚âç",
    "√£", "√§", "‚à≥", "‚®ë", "‚´≠", "‚âå", "œ∂", "‚Äµ", "‚àΩ", "‚ãç", "‚äΩ", "‚åÖ", "‚åÖ", "‚éµ", "‚é∂", "‚âå", "–±", "‚Äû", "‚àµ",
    "‚àµ", "‚¶∞", "œ∂", "‚Ñ¨", "Œ≤", "‚Ñ∂", "‚â¨", "ùîü", "‚ãÇ", "‚óØ", "‚ãÉ", "‚®Ä", "‚®Å", "‚®Ç", "‚®Ü", "‚òÖ", "‚ñΩ", "‚ñ≥", "‚®Ñ",
    "‚ãÅ", "‚ãÄ", "‚§ç", "‚ß´", "‚ñ™", "‚ñ¥", "‚ñæ", "‚óÇ", "‚ñ∏", "‚ê£", "‚ñí", "‚ñë", "‚ñì", "‚ñà", "=‚É•", "‚â°‚É•", "‚åê", "ùïì", "‚ä•",
    "‚ä•", "‚ãà", "‚ïó", "‚ïî", "‚ïñ", "‚ïì", "‚ïê", "‚ï¶", "‚ï©", "‚ï§", "‚ïß", "‚ïù", "‚ïö", "‚ïú", "‚ïô", "‚ïë", "‚ï¨", "‚ï£", "‚ï†",
    "‚ï´", "‚ï¢", "‚ïü", "‚ßâ", "‚ïï", "‚ïí", "‚îê", "‚îå", "‚îÄ", "‚ï•", "‚ï®", "‚î¨", "‚î¥", "‚äü", "‚äû", "‚ä†", "‚ïõ", "‚ïò", "‚îò",
    "‚îî", "‚îÇ", "‚ï™", "‚ï°", "‚ïû", "‚îº", "‚î§", "‚îú", "‚Äµ", "Àò", "¬¶", "ùí∑", "‚Åè", "‚àΩ", "‚ãç", "\\", "‚ßÖ", "‚üà", "‚Ä¢",
    "‚Ä¢", "‚âé", "‚™Æ", "‚âè", "‚âè", "ƒá", "‚à©", "‚©Ñ", "‚©â", "‚©ã", "‚©á", "‚©Ä", "‚à©Ô∏Ä", "‚ÅÅ", "Àá", "‚©ç", "ƒç", "√ß", "ƒâ",
    "‚©å", "‚©ê", "ƒã", "¬∏", "‚¶≤", "¬¢", "¬∑", "ùî†", "—á", "‚úì", "‚úì", "œá", "‚óã", "‚ßÉ", "ÀÜ", "‚âó", "‚Ü∫", "‚Üª", "¬Æ",
    "‚ìà", "‚äõ", "‚äö", "‚äù", "‚âó", "‚®ê", "‚´Ø", "‚ßÇ", "‚ô£", "‚ô£", ":", "‚âî", "‚âî", ",", "@", "‚àÅ", "‚àò", "‚àÅ", "‚ÑÇ",
    "‚âÖ", "‚©≠", "‚àÆ", "ùïî", "‚àê", "¬©", "‚Ñó", "‚Üµ", "‚úó", "ùí∏", "‚´è", "‚´ë", "‚´ê", "‚´í", "‚ãØ", "‚§∏", "‚§µ", "‚ãû", "‚ãü",
    "‚Ü∂", "‚§Ω", "‚à™", "‚©à", "‚©Ü", "‚©ä", "‚äç", "‚©Ö", "‚à™Ô∏Ä", "‚Ü∑", "‚§º", "‚ãû", "‚ãü", "‚ãé", "‚ãè", "¬§", "‚Ü∂", "‚Ü∑", "‚ãé",
    "‚ãè", "‚à≤", "‚à±", "‚å≠", "‚áì", "‚••", "‚Ä†", "‚Ñ∏", "‚Üì", "‚Äê", "‚ä£", "‚§è", "Àù", "ƒè", "–¥", "‚ÖÜ", "‚Ä°", "‚áä", "‚©∑",
    "¬∞", "Œ¥", "‚¶±", "‚•ø", "ùî°", "‚áÉ", "‚áÇ", "‚ãÑ", "‚ãÑ", "‚ô¶", "‚ô¶", "¬®", "œù", "‚ã≤", "√∑", "√∑", "‚ãá", "‚ãá", "—í",
    "‚åû", "‚åç", "$", "ùïï", "Àô", "‚âê", "‚âë", "‚à∏", "‚àî", "‚ä°", "‚åÜ", "‚Üì", "‚áä", "‚áÉ", "‚áÇ", "‚§ê", "‚åü", "‚åå", "ùíπ",
    "—ï", "‚ß∂", "ƒë", "‚ã±", "‚ñø", "‚ñæ", "‚áµ", "‚•Ø", "‚¶¶", "—ü", "‚üø", "‚©∑", "‚âë", "√©", "‚©Æ", "ƒõ", "‚âñ", "√™", "‚âï",
    "—ç", "ƒó", "‚Öá", "‚âí", "ùî¢", "‚™ö", "√®", "‚™ñ", "‚™ò", "‚™ô", "‚èß", "‚Ñì", "‚™ï", "‚™ó", "ƒì", "‚àÖ", "‚àÖ", "‚àÖ", "‚ÄÑ",
    "‚ÄÖ", "‚ÄÉ", "≈ã", "‚ÄÇ", "ƒô", "ùïñ", "‚ãï", "‚ß£", "‚©±", "Œµ", "Œµ", "œµ", "‚âñ", "‚âï", "‚âÇ", "‚™ñ", "‚™ï", "=", "‚âü",
    "‚â°", "‚©∏", "‚ß•", "‚âì", "‚•±", "‚ÑØ", "‚âê", "‚âÇ", "Œ∑", "√∞", "√´", "‚Ç¨", "!", "‚àÉ", "‚Ñ∞", "‚Öá", "‚âí", "—Ñ", "‚ôÄ",
    "Ô¨É", "Ô¨Ä", "Ô¨Ñ", "ùî£", "Ô¨Å", "fj", "‚ô≠", "Ô¨Ç", "‚ñ±", "∆í", "ùïó", "‚àÄ", "‚ãî", "‚´ô", "‚®ç", "¬Ω", "‚Öì", "¬º", "‚Öï",
    "‚Öô", "‚Öõ", "‚Öî", "‚Öñ", "¬æ", "‚Öó", "‚Öú", "‚Öò", "‚Öö", "‚Öù", "‚Öû", "‚ÅÑ", "‚å¢", "ùíª", "‚âß", "‚™å", "«µ", "Œ≥", "œù",
    "‚™Ü", "ƒü", "ƒù", "–≥", "ƒ°", "‚â•", "‚ãõ", "‚â•", "‚âß", "‚©æ", "‚©æ", "‚™©", "‚™Ä", "‚™Ç", "‚™Ñ", "‚ãõÔ∏Ä", "‚™î", "ùî§", "‚â´",
    "‚ãô", "‚Ñ∑", "—ì", "‚â∑", "‚™í", "‚™•", "‚™§", "‚â©", "‚™ä", "‚™ä", "‚™à", "‚™à", "‚â©", "‚ãß", "ùïò", "`", "‚Ñä", "‚â≥", "‚™é",
    "‚™ê", ">", "‚™ß", "‚©∫", "‚ãó", "‚¶ï", "‚©º", "‚™Ü", "‚•∏", "‚ãó", "‚ãõ", "‚™å", "‚â∑", "‚â≥", "‚â©Ô∏Ä", "‚â©Ô∏Ä", "‚áî", "‚Ää", "¬Ω",
    "‚Ñã", "—ä", "‚Üî", "‚•à", "‚Ü≠", "‚Ñè", "ƒ•", "‚ô•", "‚ô•", "‚Ä¶", "‚äπ", "ùî•", "‚§•", "‚§¶", "‚áø", "‚àª", "‚Ü©", "‚Ü™", "ùïô",
    "‚Äï", "ùíΩ", "‚Ñè", "ƒß", "‚ÅÉ", "‚Äê", "√≠", "‚Å£", "√Æ", "–∏", "–µ", "¬°", "‚áî", "ùî¶", "√¨", "‚Öà", "‚®å", "‚à≠", "‚ßú",
    "‚Ñ©", "ƒ≥", "ƒ´", "‚Ñë", "‚Ñê", "‚Ñë", "ƒ±", "‚ä∑", "∆µ", "‚àà", "‚ÑÖ", "‚àû", "‚ßù", "ƒ±", "‚à´", "‚ä∫", "‚Ñ§", "‚ä∫", "‚®ó",
    "‚®º", "—ë", "ƒØ", "ùïö", "Œπ", "‚®º", "¬ø", "ùíæ", "‚àà", "‚ãπ", "‚ãµ", "‚ã¥", "‚ã≥", "‚àà", "‚Å¢", "ƒ©", "—ñ", "√Ø", "ƒµ",
    "–π", "ùîß", "»∑", "ùïõ", "ùíø", "—ò", "—î", "Œ∫", "œ∞", "ƒ∑", "–∫", "ùî®", "ƒ∏", "—Ö", "—ú", "ùïú", "ùìÄ", "‚áö", "‚áê",
    "‚§õ", "‚§é", "‚â¶", "‚™ã", "‚•¢", "ƒ∫", "‚¶¥", "‚Ñí", "Œª", "‚ü®", "‚¶ë", "‚ü®", "‚™Ö", "¬´", "‚Üê", "‚á§", "‚§ü", "‚§ù", "‚Ü©",
    "‚Ü´", "‚§π", "‚•≥", "‚Ü¢", "‚™´", "‚§ô", "‚™≠", "‚™≠Ô∏Ä", "‚§å", "‚ù≤", "{", "[", "‚¶ã", "‚¶è", "‚¶ç", "ƒæ", "ƒº", "‚åà", "{",
    "–ª", "‚§∂", "‚Äú", "‚Äû", "‚•ß", "‚•ã", "‚Ü≤", "‚â§", "‚Üê", "‚Ü¢", "‚ÜΩ", "‚Üº", "‚áá", "‚Üî", "‚áÜ", "‚áã", "‚Ü≠", "‚ãã", "‚ãö",
    "‚â§", "‚â¶", "‚©Ω", "‚©Ω", "‚™®", "‚©ø", "‚™Å", "‚™É", "‚ãöÔ∏Ä", "‚™ì", "‚™Ö", "‚ãñ", "‚ãö", "‚™ã", "‚â∂", "‚â≤", "‚•º", "‚åä", "ùî©",
    "‚â∂", "‚™ë", "‚ÜΩ", "‚Üº", "‚•™", "‚ñÑ", "—ô", "‚â™", "‚áá", "‚åû", "‚•´", "‚ó∫", "≈Ä", "‚é∞", "‚é∞", "‚â®", "‚™â", "‚™â", "‚™á",
    "‚™á", "‚â®", "‚ã¶", "‚ü¨", "‚áΩ", "‚ü¶", "‚üµ", "‚ü∑", "‚üº", "‚ü∂", "‚Ü´", "‚Ü¨", "‚¶Ö", "ùïù", "‚®≠", "‚®¥", "‚àó", "_", "‚óä",
    "‚óä", "‚ß´", "(", "‚¶ì", "‚áÜ", "‚åü", "‚áã", "‚•≠", "‚Äé", "‚äø", "‚Äπ", "ùìÅ", "‚Ü∞", "‚â≤", "‚™ç", "‚™è", "[", "‚Äò", "‚Äö",
    "≈Ç", "<", "‚™¶", "‚©π", "‚ãñ", "‚ãã", "‚ãâ", "‚•∂", "‚©ª", "‚¶ñ", "‚óÉ", "‚ä¥", "‚óÇ", "‚•ä", "‚•¶", "‚â®Ô∏Ä", "‚â®Ô∏Ä", "‚à∫", "¬Ø",
    "‚ôÇ", "‚ú†", "‚ú†", "‚Ü¶", "‚Ü¶", "‚Üß", "‚Ü§", "‚Ü•", "‚ñÆ", "‚®©", "–º", "‚Äî", "‚à°", "ùî™", "‚Ñß", "¬µ", "‚à£", "*", "‚´∞",
    "¬∑", "‚àí", "‚äü", "‚à∏", "‚®™", "‚´õ", "‚Ä¶", "‚àì", "‚äß", "ùïû", "‚àì", "ùìÇ", "‚àæ", "Œº", "‚ä∏", "‚ä∏", "‚ãôÃ∏", "‚â´‚Éí", "‚â´Ã∏",
    "‚áç", "‚áé", "‚ãòÃ∏", "‚â™‚Éí", "‚â™Ã∏", "‚áè", "‚äØ", "‚äÆ", "‚àá", "≈Ñ", "‚à†‚Éí", "‚ââ", "‚©∞Ã∏", "‚âãÃ∏", "≈â", "‚ââ", "‚ôÆ", "‚ôÆ", "‚Ñï",
    " ", "‚âéÃ∏", "‚âèÃ∏", "‚©É", "≈à", "≈Ü", "‚âá", "‚©≠Ã∏", "‚©Ç", "–Ω", "‚Äì", "‚â†", "‚áó", "‚§§", "‚Üó", "‚Üó", "‚âêÃ∏", "‚â¢", "‚§®",
    "‚âÇÃ∏", "‚àÑ", "‚àÑ", "ùî´", "‚âßÃ∏", "‚â±", "‚â±", "‚âßÃ∏", "‚©æÃ∏", "‚©æÃ∏", "‚âµ", "‚âØ", "‚âØ", "‚áé", "‚ÜÆ", "‚´≤", "‚àã", "‚ãº", "‚ã∫",
    "‚àã", "—ö", "‚áç", "‚â¶Ã∏", "‚Üö", "‚Ä•", "‚â∞", "‚Üö", "‚ÜÆ", "‚â∞", "‚â¶Ã∏", "‚©ΩÃ∏", "‚©ΩÃ∏", "‚âÆ", "‚â¥", "‚âÆ", "‚ã™", "‚ã¨", "‚à§",
    "ùïü", "¬¨", "‚àâ", "‚ãπÃ∏", "‚ãµÃ∏", "‚àâ", "‚ã∑", "‚ã∂", "‚àå", "‚àå", "‚ãæ", "‚ãΩ", "‚à¶", "‚à¶", "‚´Ω‚É•", "‚àÇÃ∏", "‚®î", "‚äÄ", "‚ã†",
    "‚™ØÃ∏", "‚äÄ", "‚™ØÃ∏", "‚áè", "‚Üõ", "‚§≥Ã∏", "‚ÜùÃ∏", "‚Üõ", "‚ã´", "‚ã≠", "‚äÅ", "‚ã°", "‚™∞Ã∏", "ùìÉ", "‚à§", "‚à¶", "‚âÅ", "‚âÑ", "‚âÑ",
    "‚à§", "‚à¶", "‚ã¢", "‚ã£", "‚äÑ", "‚´ÖÃ∏", "‚äà", "‚äÇ‚Éí", "‚äà", "‚´ÖÃ∏", "‚äÅ", "‚™∞Ã∏", "‚äÖ", "‚´ÜÃ∏", "‚äâ", "‚äÉ‚Éí", "‚äâ", "‚´ÜÃ∏", "‚âπ",
    "√±", "‚â∏", "‚ã™", "‚ã¨", "‚ã´", "‚ã≠", "ŒΩ", "#", "‚Ññ", "‚Äá", "‚ä≠", "‚§Ñ", "‚âç‚Éí", "‚ä¨", "‚â•‚Éí", ">‚Éí", "‚ßû", "‚§Ç", "‚â§‚Éí",
    "<‚Éí", "‚ä¥‚Éí", "‚§É", "‚äµ‚Éí", "‚àº‚Éí", "‚áñ", "‚§£", "‚Üñ", "‚Üñ", "‚§ß", "‚ìà", "√≥", "‚äõ", "‚äö", "√¥", "–æ", "‚äù", "≈ë", "‚®∏",
    "‚äô", "‚¶º", "≈ì", "‚¶ø", "ùî¨", "Àõ", "√≤", "‚ßÅ", "‚¶µ", "Œ©", "‚àÆ", "‚Ü∫", "‚¶æ", "‚¶ª", "‚Äæ", "‚ßÄ", "≈ç", "œâ", "Œø",
    "‚¶∂", "‚äñ", "ùï†", "‚¶∑", "‚¶π", "‚äï", "‚à®", "‚Üª", "‚©ù", "‚Ñ¥", "‚Ñ¥", "¬™", "¬∫", "‚ä∂", "‚©ñ", "‚©ó", "‚©õ", "‚Ñ¥", "√∏",
    "‚äò", "√µ", "‚äó", "‚®∂", "√∂", "‚åΩ", "‚à•", "¬∂", "‚à•", "‚´≥", "‚´Ω", "‚àÇ", "–ø", "%", ".", "‚Ä∞", "‚ä•", "‚Ä±", "ùî≠",
    "œÜ", "œï", "‚Ñ≥", "‚òé", "œÄ", "‚ãî", "œñ", "‚Ñè", "‚Ñé", "‚Ñè", "+", "‚®£", "‚äû", "‚®¢", "‚àî", "‚®•", "‚©≤", "¬±", "‚®¶",
    "‚®ß", "¬±", "‚®ï", "ùï°", "¬£", "‚â∫", "‚™≥", "‚™∑", "‚âº", "‚™Ø", "‚â∫", "‚™∑", "‚âº", "‚™Ø", "‚™π", "‚™µ", "‚ã®", "‚âæ", "‚Ä≤",
    "‚Ñô", "‚™µ", "‚™π", "‚ã®", "‚àè", "‚åÆ", "‚åí", "‚åì", "‚àù", "‚àù", "‚âæ", "‚ä∞", "ùìÖ", "œà", "‚Äà", "ùîÆ", "‚®å", "ùï¢", "‚Åó",
    "ùìÜ", "‚Ñç", "‚®ñ", "?", "‚âü", "\"", "‚áõ", "‚áí", "‚§ú", "‚§è", "‚•§", "‚àΩÃ±", "≈ï", "‚àö", "‚¶≥", "‚ü©", "‚¶í", "‚¶•", "‚ü©",
    "¬ª", "‚Üí", "‚•µ", "‚á•", "‚§†", "‚§≥", "‚§û", "‚Ü™", "‚Ü¨", "‚•Ö", "‚•¥", "‚Ü£", "‚Üù", "‚§ö", "‚à∂", "‚Ñö", "‚§ç", "‚ù≥", "}",
    "]", "‚¶å", "‚¶é", "‚¶ê", "≈ô", "≈ó", "‚åâ", "}", "—Ä", "‚§∑", "‚•©", "‚Äù", "‚Äù", "‚Ü≥", "‚Ñú", "‚Ñõ", "‚Ñú", "‚Ñù", "‚ñ≠",
    "¬Æ", "‚•Ω", "‚åã", "ùîØ", "‚áÅ", "‚áÄ", "‚•¨", "œÅ", "œ±", "‚Üí", "‚Ü£", "‚áÅ", "‚áÄ", "‚áÑ", "‚áå", "‚áâ", "‚Üù", "‚ãå", "Àö",
    "‚âì", "‚áÑ", "‚áå", "‚Äè", "‚é±", "‚é±", "‚´Æ", "‚ü≠", "‚áæ", "‚üß", "‚¶Ü", "ùï£", "‚®Æ", "‚®µ", ")", "‚¶î", "‚®í", "‚áâ", "‚Ä∫",
    "ùìá", "‚Ü±", "]", "‚Äô", "‚Äô", "‚ãå", "‚ãä", "‚ñπ", "‚äµ", "‚ñ∏", "‚ßé", "‚•®", "‚Ñû", "≈õ", "‚Äö", "‚âª", "‚™¥", "‚™∏", "≈°",
    "‚âΩ", "‚™∞", "≈ü", "≈ù", "‚™∂", "‚™∫", "‚ã©", "‚®ì", "‚âø", "—Å", "‚ãÖ", "‚ä°", "‚©¶", "‚áò", "‚§•", "‚Üò", "‚Üò", "¬ß", ";",
    "‚§©", "‚àñ", "‚àñ", "‚ú∂", "ùî∞", "‚å¢", "‚ôØ", "—â", "—à", "‚à£", "‚à•", "\u{AD}", "œÉ", "œÇ", "œÇ", "‚àº", "‚©™", "‚âÉ",
    "‚âÉ", "‚™û", "‚™†", "‚™ù", "‚™ü", "‚âÜ", "‚®§", "‚•≤", "‚Üê", "‚àñ", "‚®≥", "‚ß§", "‚à£", "‚å£", "‚™™", "‚™¨", "‚™¨Ô∏Ä", "—å", "/",
    "‚ßÑ", "‚åø", "ùï§", "‚ô†", "‚ô†", "‚à•", "‚äì", "‚äìÔ∏Ä", "‚äî", "‚äîÔ∏Ä", "‚äè", "‚äë", "‚äè", "‚äë", "‚äê", "‚äí", "‚äê", "‚äí", "‚ñ°",
    "‚ñ°", "‚ñ™", "‚ñ™", "‚Üí", "ùìà", "‚àñ", "‚å£", "‚ãÜ", "‚òÜ", "‚òÖ", "œµ", "œï", "¬Ø", "‚äÇ", "‚´Ö", "‚™Ω", "‚äÜ", "‚´É", "‚´Å",
    "‚´ã", "‚ää", "‚™ø", "‚•π", "‚äÇ", "‚äÜ", "‚´Ö", "‚ää", "‚´ã", "‚´á", "‚´ï", "‚´ì", "‚âª", "‚™∏", "‚âΩ", "‚™∞", "‚™∫", "‚™∂", "‚ã©",
    "‚âø", "‚àë", "‚ô™", "¬π", "¬≤", "¬≥", "‚äÉ", "‚´Ü", "‚™æ", "‚´ò", "‚äá", "‚´Ñ", "‚üâ", "‚´ó", "‚•ª", "‚´Ç", "‚´å", "‚äã", "‚´Ä",
    "‚äÉ", "‚äá", "‚´Ü", "‚äã", "‚´å", "‚´à", "‚´î", "‚´ñ", "‚áô", "‚§¶", "‚Üô", "‚Üô", "‚§™", "√ü", "‚åñ", "œÑ", "‚é¥", "≈•", "≈£",
    "—Ç", "‚Éõ", "‚åï", "ùî±", "‚à¥", "‚à¥", "Œ∏", "œë", "œë", "‚âà", "‚àº", "‚Äâ", "‚âà", "‚àº", "√æ", "Àú", "√ó", "‚ä†", "‚®±",
    "‚®∞", "‚à≠", "‚§®", "‚ä§", "‚å∂", "‚´±", "ùï•", "‚´ö", "‚§©", "‚Ä¥", "‚Ñ¢", "‚ñµ", "‚ñø", "‚óÉ", "‚ä¥", "‚âú", "‚ñπ", "‚äµ", "‚ó¨",
    "‚âú", "‚®∫", "‚®π", "‚ßç", "‚®ª", "‚è¢", "ùìâ", "—Ü", "—õ", "≈ß", "‚â¨", "‚Üû", "‚Ü†", "‚áë", "‚•£", "√∫", "‚Üë", "—û", "≈≠",
    "√ª", "—É", "‚áÖ", "≈±", "‚•Æ", "‚•æ", "ùî≤", "√π", "‚Üø", "‚Üæ", "‚ñÄ", "‚åú", "‚åú", "‚åè", "‚ó∏", "≈´", "¬®", "≈≥", "ùï¶",
    "‚Üë", "‚Üï", "‚Üø", "‚Üæ", "‚äé", "œÖ", "œí", "œÖ", "‚áà", "‚åù", "‚åù", "‚åé", "≈Ø", "‚óπ", "ùìä", "‚ã∞", "≈©", "‚ñµ", "‚ñ¥",
    "‚áà", "√º", "‚¶ß", "‚áï", "‚´®", "‚´©", "‚ä®", "‚¶ú", "œµ", "œ∞", "‚àÖ", "œï", "œñ", "‚àù", "‚Üï", "œ±", "œÇ", "‚ääÔ∏Ä", "‚´ãÔ∏Ä",
    "‚äãÔ∏Ä", "‚´åÔ∏Ä", "œë", "‚ä≤", "‚ä≥", "–≤", "‚ä¢", "‚à®", "‚äª", "‚âö", "‚ãÆ", "|", "|", "ùî≥", "‚ä≤", "‚äÇ‚Éí", "‚äÉ‚Éí", "ùïß", "‚àù",
    "‚ä≥", "ùìã", "‚´ãÔ∏Ä", "‚ääÔ∏Ä", "‚´åÔ∏Ä", "‚äãÔ∏Ä", "‚¶ö", "≈µ", "‚©ü", "‚àß", "‚âô", "‚Ñò", "ùî¥", "ùï®", "‚Ñò", "‚âÄ", "‚âÄ", "ùìå", "‚ãÇ",
    "‚óØ", "‚ãÉ", "‚ñΩ", "ùîµ", "‚ü∫", "‚ü∑", "Œæ", "‚ü∏", "‚üµ", "‚üº", "‚ãª", "‚®Ä", "ùï©", "‚®Å", "‚®Ç", "‚üπ", "‚ü∂", "ùìç", "‚®Ü",
    "‚®Ñ", "‚ñ≥", "‚ãÅ", "‚ãÄ", "√Ω", "—è", "≈∑", "—ã", "¬•", "ùî∂", "—ó", "ùï™", "ùìé", "—é", "√ø", "≈∫", "≈æ", "–∑", "≈º",
    "‚Ñ®", "Œ∂", "ùî∑", "–∂", "‚áù", "ùï´", "ùìè", "‚Äç", "‚Äå",
];

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn constants() {
        assert_eq!(
            CHARACTER_REFERENCE_DECIMAL_SIZE_MAX,
            format!("{}", 0x10ffff).len(),
            "`CHARACTER_REFERENCE_DECIMAL_SIZE_MAX`"
        );

        assert_eq!(
            CHARACTER_REFERENCE_HEXADECIMAL_SIZE_MAX,
            format!("{:x}", 0x10ffff).len(),
            "`CHARACTER_REFERENCE_HEXADECIMAL_SIZE_MAX`"
        );

        assert_eq!(
            CHARACTER_REFERENCE_NAMED_SIZE_MAX,
            longest(&CHARACTER_REFERENCE_NAMES).unwrap().len(),
            "`CHARACTER_REFERENCE_NAMED_SIZE_MAX`"
        );

        assert_eq!(
            HTML_RAW_SIZE_MAX,
            longest(&HTML_RAW_NAMES).unwrap().len(),
            "`HTML_RAW_SIZE_MAX`"
        );
    }

    fn longest<'a>(list: &[&'a str]) -> Option<&'a str> {
        let mut max = 0;
        let mut result = None;
        for name in list.iter() {
            let len = name.len();
            if len > max {
                max = len;
                result = Some(*name);
            }
        }

        result
    }
}
